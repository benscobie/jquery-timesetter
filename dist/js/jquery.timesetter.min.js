"use strict";(function($){function padLeft(value,l,c){return Array(l-value.toString().length+1).join(c||" ")+value.toString()}$.fn.timesetter=function(options){var self=this;var unit="minutes";var inputHourTextbox=null;var inputMinuteTextbox=null;var btnUp=null;var btnDown=null;var container=null;var htmlTemplate='<div class="timesetter-container">'+'<div class="timesetter-time-value-border">'+'<input type="text" class="timesetter-time-part timesetter-hours hours" data-unit="hours" autocomplete="off" />'+'<span class="timesetter-hour-symbol"></span>'+'<span class="timesetter-time-delimiter">:</span>'+'<input type="text" class="timesetter-time-part timesetter-minutes minutes" data-unit="minutes" autocomplete="off" />'+'<span class="timesetter-minute-symbol"></span>'+'<div class="timesetter-button-time-control">'+'<div type="button" data-direction="increment" class="timesetter-btn-up timesetter-updown-button">'+'<i class="glyphicon glyphicon-triangle-top"></i>'+"</div>"+'<div type="button" data-direction="decrement" class="timesetter-btn-down timesetter-updown-button">'+'<i class="glyphicon glyphicon-triangle-bottom"></i>'+"</div>"+"</div>"+"</div>"+"</div>";var getMaxLength=function getMaxLength(unitSettings){return unitSettings.max.toString().length};var saveOptions=function saveOptions(options){if(options){self.settings=$.extend(self.settings,options)}else{self.settings=self.getDefaultSettings()}return self.settings};var unitChanged=function unitChanged(sender){unit=$(sender).data("unit")};var updateTimeValue=function updateTimeValue(sender){var currentHourValue=parseInt(inputHourTextbox.val().trim());var currentMinuteValue=parseInt(inputMinuteTextbox.val().trim());var direction=$(sender).data("direction");var newHourValue;var newMinuteValue;if(isNaN(currentHourValue)){currentHourValue=self.settings.hour.min}if(isNaN(currentMinuteValue)){currentMinuteValue=self.settings.minute.min}if(unit==="hours"){newHourValue=0;if(direction==="decrement"){newHourValue=currentHourValue-self.settings.hour.step;if(newHourValue%self.settings.hour.step>0){newHourValue=newHourValue-newHourValue%self.settings.hour.step}if(newHourValue<=self.settings.hour.min){newHourValue=self.settings.hour.min}}else if(direction==="increment"){newHourValue=currentHourValue+self.settings.hour.step;if(newHourValue%self.settings.hour.step>0){newHourValue=newHourValue-newHourValue%self.settings.hour.step}if(newHourValue>=self.settings.hour.max){newHourValue=self.settings.hour.max-self.settings.hour.step}}$(inputHourTextbox).val(padLeft(newHourValue.toString(),getMaxLength(self.settings.hour),self.settings.numberPaddingChar));$(container).attr("data-hour-value",newHourValue);$(inputHourTextbox).change().select()}else if(unit==="minutes"){newHourValue=currentHourValue;newMinuteValue=currentMinuteValue;if(direction==="decrement"){newMinuteValue=currentMinuteValue-self.settings.minute.step;if(newMinuteValue%self.settings.minute.step>0){newMinuteValue=newMinuteValue-newMinuteValue%self.settings.minute.step}if(newHourValue<=self.settings.hour.min&&currentMinuteValue<=self.settings.minute.min){newHourValue=self.settings.hour.min;newMinuteValue=self.settings.minute.min}}else if(direction==="increment"){newMinuteValue=currentMinuteValue+self.settings.minute.step;if(newMinuteValue%self.settings.minute.step>0){newMinuteValue=newMinuteValue-newMinuteValue%self.settings.minute.step}if(newHourValue>=self.settings.hour.max-self.settings.hour.step&&currentMinuteValue>=self.settings.minute.max-self.settings.minute.step){newHourValue=self.settings.hour.max-self.settings.hour.step;newMinuteValue=self.settings.minute.max-self.settings.minute.step}}if(newMinuteValue>=self.settings.minute.max&&newHourValue!=self.settings.hour.max&&newMinuteValue){newMinuteValue=self.settings.minute.min;newHourValue=currentHourValue+self.settings.hour.step}else if(newMinuteValue<self.settings.minute.min&&currentHourValue>=self.settings.hour.step){newMinuteValue=self.settings.minute.max-self.settings.minute.step;newHourValue=currentHourValue-self.settings.hour.step}else if(newMinuteValue<self.settings.minute.min&&currentHourValue<self.settings.hour.step){newMinuteValue=self.settings.minute.min;newHourValue=self.settings.hour.min}$(inputHourTextbox).val(padLeft(newHourValue.toString(),getMaxLength(self.settings.hour),self.settings.numberPaddingChar));$(inputMinuteTextbox).val(padLeft(newMinuteValue.toString(),getMaxLength(self.settings.minute),self.settings.numberPaddingChar));$(container).attr("data-hour-value",newHourValue);$(container).attr("data-minute-value",newMinuteValue);$(inputMinuteTextbox).change().select()}};var updateTimeValueByArrowKeys=function updateTimeValueByArrowKeys(sender,event){switch(event.which){case 13:break;case 37:break;case 38:btnUp.click();break;case 39:break;case 40:btnDown.click();break;default:return}event.preventDefault();$(sender).select()};var formatInput=function formatInput(e){var element=$(e.target);var unitSettings;if(unit==="hours"){unitSettings=self.settings.hour}else if(unit==="minutes"){unitSettings=self.settings.minute}var maxLength=getMaxLength(unitSettings);if(!$.isNumeric(element.val())){$(element).val(padLeft(unitSettings.min.toString(),getMaxLength(unitSettings),self.settings.numberPaddingChar));return false}var value=parseInt(parseFloat(element.val()));var maxLengthUnitSettings=getMaxLength(unitSettings);if(value>=unitSettings.max){value=unitSettings.max-unitSettings.step;$(element).val(padLeft(value.toString(),maxLengthUnitSettings,self.settings.numberPaddingChar));return false}else if(value<=unitSettings.min){$(element).val(padLeft(unitSettings.min.toString(),maxLengthUnitSettings,self.settings.numberPaddingChar));return false}else if(padLeft(value.toString(),maxLengthUnitSettings,self.settings.numberPaddingChar)!==$(element).val()){$(element).val(padLeft(value.toString(),maxLengthUnitSettings,self.settings.numberPaddingChar));return false}else if(value%unitSettings.step>0){value=value-value%unitSettings.step;$(element).val(padLeft(value.toString(),maxLengthUnitSettings,self.settings.numberPaddingChar));return false}if(e.which!=8&&e.which!==0&&(e.which<48||e.which>57)){return false}if(value>=Math.pow(10,maxLengthUnitSettings)){$(element).val(padLeft((Math.pow(10,maxLengthUnitSettings)-1).toString(),maxLengthUnitSettings,self.settings.numberPaddingChar));return false}};self.getHours=function(){if($.isNumeric(inputHourTextbox.val())){return parseInt(inputHourTextbox.val())}return self.settings.hour.min};self.getMinutes=function(){if($.isNumeric(inputMinuteTextbox.val())){return parseInt(inputMinuteTextbox.val())}return self.settings.minute.min};self.getTotalMinutes=function(){var hourValue=0;var minuteValue=0;if($.isNumeric(inputHourTextbox.val())&&$.isNumeric(inputMinuteTextbox.val())){hourValue=parseInt(inputHourTextbox.val());minuteValue=parseInt(inputMinuteTextbox.val())}return hourValue*60+minuteValue};self.setHour=function(hourValue){if($.isNumeric(hourValue)){inputHourTextbox.val(hourValue)}else{inputHourTextbox.val(padLeft(self.settings.hour.min.toString(),getMaxLength(self.settings.hour),self.settings.numberPaddingChar))}unit="hours";inputHourTextbox.change();return this};self.setMinute=function(minuteValue){if($.isNumeric(minuteValue)){inputMinuteTextbox.val(minuteValue)}else{inputMinuteTextbox.val(padLeft(self.settings.minute.min.toString(),getMaxLength(self.settings.minute),self.settings.numberPaddingChar))}unit="minutes";inputMinuteTextbox.change();return this};self.setTotalMinutes=function(totalMinutes){var hourValue=0;var minuteValue=0;if(totalMinutes&&totalMinutes>0&&totalMinutes<24*60){minuteValue=totalMinutes%60;hourValue=(totalMinutes-minuteValue)/60}inputHourTextbox.val(padLeft(hourValue.toString(),getMaxLength(self.settings.hour),self.settings.numberPaddingChar));inputMinuteTextbox.val(padLeft(minuteValue.toString(),getMaxLength(self.settings.minute),self.settings.numberPaddingChar));unit="minutes";inputMinuteTextbox.change();return this};self.getDefaultSettings=function(){return{hour:{value:0,min:0,max:24,step:1,symbol:"h"},minute:{value:0,min:0,max:60,step:15,symbol:"mins"},numberPaddingChar:"0"}};self.settings=self.getDefaultSettings();var wrapper=$(this);if(wrapper.find(".timesetter-container").length!==1){wrapper.html(htmlTemplate)}container=wrapper.find(".timesetter-container");inputHourTextbox=container.find(".timesetter-hours");inputMinuteTextbox=container.find(".timesetter-minutes");saveOptions(options);btnUp=container.find(".timesetter-btn-up");btnDown=container.find(".timesetter-btn-down");btnUp.unbind("click").bind("click",function(event){updateTimeValue(this,event)});btnDown.unbind("click").bind("click",function(event){updateTimeValue(this,event)});inputHourTextbox.unbind("focusin").bind("focusin",function(event){$(this).select();unitChanged(this,event)});inputMinuteTextbox.unbind("focusin").bind("focusin",function(event){$(this).select();unitChanged(this,event)});inputHourTextbox.unbind("keydown").bind("keydown",function(event){updateTimeValueByArrowKeys(this,event)});inputMinuteTextbox.unbind("keydown").bind("keydown",function(event){updateTimeValueByArrowKeys(this,event)});container.find("input[type=text]").each(function(){$(this).change(function(e){formatInput(e)})});if(inputHourTextbox.val().length===0){inputHourTextbox.val(padLeft(self.settings.hour.min.toString(),getMaxLength(self.settings.hour),self.settings.numberPaddingChar))}if(inputMinuteTextbox.val().length===0){inputMinuteTextbox.val(padLeft(self.settings.minute.min.toString(),getMaxLength(self.settings.minute),self.settings.numberPaddingChar))}var timesetterHourSymbolSpan=inputHourTextbox.siblings("span.timesetter-hour-symbol:first");timesetterHourSymbolSpan.text(self.settings.hour.symbol);var timesetterMinuteSymbolSpan=inputMinuteTextbox.siblings("span.timesetter-minute-symbol:first");timesetterMinuteSymbolSpan.text(self.settings.minute.symbol);return this}})(jQuery);